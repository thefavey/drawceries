{"version":3,"sources":["db/groceryDb.js","db/categoriesDb.js","components/Header.js","components/TabButton.js","components/Nav.js","components/PopupBase.js","components/listViewComponents/ConfirmButton.js","components/LoginPopup.js","components/listViewComponents/CategoriesDropdown.js","components/listViewComponents/AddCategoryButton.js","components/listViewComponents/GroceryCategories.js","components/listViewComponents/AddGroceryButton.js","components/listViewComponents/GroceryItem.js","components/listViewComponents/CollapsibleList.js","components/listViewComponents/GroceryList.js","utils.js","components/listViewComponents/AddGroceryPopup.js","components/listViewComponents/AddCategoryPopup.js","components/listViewComponents/BoughtGroceryPopup.js","components/listViewComponents/UnboughtGroceryPopup.js","components/PopupLogic.js","components/ListView.js","components/statsViewComponents/MoneySpentChart.js","components/StatsView.js","components/recipesViewComponents/RecipeDisplay.js","components/RecipesView.js","components/ViewsLogic.js","App.js","serviceWorker.js","index.js"],"names":["groceryDb","name","quantity","category","addedBy","addedOn","Date","isBought","boughtBy","boughtOn","price","categoriesDb","Header","handleLoginClick","loginPopupState","currentUser","className","onClick","TabButton","tabName","currentTab","handleTabClick","Nav","tabList","map","t","key","PopupBase","title","children","closePopup","cancelPopup","anim","ConfirmButton","label","buttonClass","handleConfirm","question","useState","clicked","setClicked","LoginPopup","handleUserChange","closeLogin","cancelLogin","onSubmit","e","target","user","value","type","placeholder","required","CategoriesDropDown","groceryCategories","handleChange","onChange","item","AddCategoryButton","openPopup","GroceryCategories","AddGroceryButton","GroceryItem","handleItemClick","preventDefault","CollapsibleList","filteredGroceries","collapsedProp","collapsed","setCollapsed","GroceryList","filter","dateToString","date","toLocaleDateString","day","month","currentDate","setHours","AddGroceryPopup","addGrocery","groceriesDict","errMsg","setErrMsg","toLowerCase","indexOf","AddCategoryPopup","addCategory","g","BoughtGroceryPopup","grocery","unbuyGrocery","UnboughtGroceryPopup","buyGrocery","removeGrocery","parseInt","step","PopupLogic","popupType","clickedItem","loggedIn","setLoggedIn","ListView","groceryCategoriesDb","groceriesDb","currentCategory","setCurrentCategory","setGroceryCategories","setGroceriesDict","setPopupType","setClickedItem","useEffect","MoneySpentChart","data","setData","groceries","array","returns","forEach","push","x","y","arrayToXandY","datesAndPrices","cumulVal","groceryList","index","i","arr","datesAndCumul","boughtGroceries","alreadyIndex","toISOString","newVal","sortedGroupedDates","sort","a","b","axes","primary","position","series","showPoints","tooltip","StatsView","RecipeDisplay","recipe","history","useHistory","style","backgroundImage","image","fetchRecipeUrl","id","fetch","toString","res","status","console","log","json","sourceUrl","RecipesView","selectedIngredients","setSelectedIngredients","recipes","setRecipes","ingredients","query","join","fetchRecipes","r","ViewsLogic","App","setGroceryCategoriesDb","setGroceriesDb","setCurrentTab","setLoginPopupState","setCurrentUser","newUser","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2907609b.chunk.js","sourcesContent":["const groceryDb = [\n  {\n    name: \"Bread\",\n    quantity: \"5\",\n    category: \"Red\",\n    addedBy: \"Nancy\",\n    addedOn: new Date(2020, 4, 8),\n    isBought: false,\n  },\n  {\n    name: \"Water\",\n    quantity: \"2L\",\n    category: \"Blue\",\n    addedBy: \"Fred\",\n    addedOn: new Date(2020, 3, 25),\n    isBought: false,\n  },\n  {\n    name: \"Cheese\",\n    quantity: \"50\",\n    category: null,\n    addedBy: \"Aya\",\n    addedOn: new Date(2020, 1, 30),\n    isBought: true,\n    boughtBy: \"Fred\",\n    boughtOn: new Date(2020, 2, 1),\n    price: 50,\n  },\n  {\n    name: \"Wine\",\n    quantity: \"3L\",\n    category: null,\n    addedBy: \"Marcel\",\n    addedOn: new Date(2020, 2, 2),\n    isBought: true,\n    boughtBy: \"Charles\",\n    boughtOn: new Date(2020, 2, 10),\n    price: 15,\n  },\n  {\n    name: \"Beer\",\n    quantity: \"5L\",\n    category: null,\n    addedBy: \"Marcel\",\n    addedOn: new Date(2020, 2, 2),\n    isBought: true,\n    boughtBy: \"Julia\",\n    boughtOn: new Date(2020, 2, 10),\n    price: 20,\n  },\n  {\n    name: \"M&M's\",\n    quantity: \"5kg\",\n    category: null,\n    addedBy: \"Didier\",\n    addedOn: new Date(2020, 1, 4),\n    isBought: true,\n    boughtBy: \"Charles\",\n    boughtOn: new Date(2020, 3, 5),\n    price: 20,\n  },\n\n];\n\nexport default groceryDb;\n","const categoriesDb = [\"Blue\", \"Red\"];\n\nexport default categoriesDb;\n","import React from \"react\";\nimport { BiUserCircle } from \"react-icons/bi\";\n\nimport \"../App.css\";\n\nconst Header = ({ handleLoginClick, currentUser, loginPopupState }) => {\n  return (\n    <div className=\"header\">\n      <div className=\"title\">Drawceries</div>\n      <div\n        className=\"loginButton\"\n        onClick={() => {\n          handleLoginClick();\n        }}\n      >\n        <BiUserCircle\n          className={\"loginIcon\" + (loginPopupState ? \"Highlighted\" : \"\")}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { BsList } from \"react-icons/bs\";\nimport { IoIosStats } from \"react-icons/io\";\nimport { GiKnifeFork } from \"react-icons/gi\";\n\nimport \"../App.css\";\n\nconst TabButton = ({ tabName, currentTab, handleTabClick }) => {\n  return (\n    <button className=\"tabButton\" onClick={handleTabClick(tabName)}>\n      {tabName === \"list\" ? (\n        <BsList\n          className={\"tabIcon\" + (currentTab === \"list\" ? \"Highlighted\" : \"\")}\n        />\n      ) : tabName === \"stats\" ? (\n        <IoIosStats\n          className={\"tabIcon\" + (currentTab === \"stats\" ? \"Highlighted\" : \"\")}\n        />\n      ) : tabName === \"recipes\" ? (\n        <GiKnifeFork\n          className={\n            \"tabIcon\" + (currentTab === \"recipes\" ? \"Highlighted\" : \"\")\n          }\n        />\n      ) : (\n        \"\"\n      )}\n    </button>\n  );\n};\n\nexport default TabButton;\n","import React from \"react\";\n\nimport TabButton from \"./TabButton.js\";\nimport \"../App.css\";\n\nconst Nav = ({ tabList, currentTab, handleTabClick }) => {\n  return (\n    <div className=\"nav\">\n      {tabList.map((t) => (\n        <TabButton\n          key={t}\n          tabName={t}\n          currentTab={currentTab}\n          handleTabClick={handleTabClick}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nimport \"../App.css\";\n\nconst PopupBase = ({ title, children, closePopup, cancelPopup, anim }) => {\n  return (\n    <div className={\"popup \" + (anim ? anim : \"\")}>\n      <div className=\"popupTitle\">\n        <span>{title}</span>\n        <AiOutlineClose\n          className=\"closePopup\"\n          onClick={cancelPopup ? cancelPopup : closePopup}\n        />\n      </div>\n      <div className=\"popupBody\">{children}</div>\n    </div>\n  );\n};\n\nexport default PopupBase;\n","import React, { useState } from \"react\";\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from \"react-icons/ai\";\n\nimport \"../../App.css\";\n\nconst ConfirmButton = ({ label, buttonClass, question, handleConfirm }) => {\n  const [clicked, setClicked] = useState(false);\n\n  if (!clicked) {\n    return (\n      <div\n        className={\"confirmation \" + buttonClass}\n        onClick={() => setClicked(true)}\n      >\n        <div>{label}</div>\n      </div>\n    );\n  } else {\n    return (\n      <div className={\"confirmationPrompt \" + buttonClass}>\n        <div>Are you sure?</div>\n        <div>\n          <AiOutlineCloseCircle\n            className=\"sureIcon\"\n            onClick={() => setClicked(false)}\n          />\n          <AiOutlineCheckCircle className=\"sureIcon\" onClick={handleConfirm} />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default ConfirmButton;\n","import React from \"react\";\n\nimport PopupBase from \"./PopupBase.js\";\nimport ConfirmButton from \"./listViewComponents/ConfirmButton.js\";\nimport \"../App.css\";\n\nconst LoginPopup = ({\n  currentUser,\n  handleUserChange,\n  closeLogin,\n  cancelLogin,\n}) => {\n  const handleSubmit = (e) => {\n    handleUserChange(e.target.user.value);\n    closeLogin();\n  };\n\n  return (\n    <PopupBase\n      title={\n        cancelLogin\n          ? \"Please log in\"\n          : currentUser\n          ? \"Current user: \" + currentUser\n          : \"\"\n      }\n      closePopup={closeLogin}\n      cancelPopup={cancelLogin}\n      anim=\"dropAnim\"\n    >\n      <form className=\"popupForm\" onSubmit={handleSubmit}>\n        <div className=\"formItem\">\n          <input name=\"user\" type=\"text\" placeholder=\"User name\" required />\n        </div>\n        <div className={\"popupButton\" + (currentUser ? \"s\" : \"\")}>\n          {currentUser && (\n            <ConfirmButton\n              label=\"Log out\"\n              buttonClass=\"halfButton red\"\n              handleConfirm={() => {\n                handleUserChange(null);\n                closeLogin();\n              }}\n            />\n          )}\n          {currentUser && <div className=\"verticalBorder\" />}\n          <button\n            className={\"green \" + (currentUser ? \"halfButton\" : \"fullButton\")}\n            type=\"submit\"\n          >\n            {currentUser ? \"Switch user\" : \"Log in\"}\n          </button>\n        </div>\n      </form>\n    </PopupBase>\n  );\n};\n\nexport default LoginPopup;\n","import React from \"react\";\n\nimport \"../../App.css\";\n\nconst CategoriesDropDown = ({ groceryCategories, handleChange }) => {\n  return (\n    <select\n      className=\"categoriesDropdown\"\n      name=\"categories\"\n      onChange={handleChange}\n    >\n      {[\"Select category\", ...groceryCategories].map((item) => (\n        <option key={item} value={item}>\n          {item}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default CategoriesDropDown;\n","import React from \"react\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\n\nimport \"../../App.css\";\n\nconst AddCategoryButton = ({ openPopup }) => {\n  return (\n    <AiOutlinePlusCircle className=\"addCategoryButton\" onClick={openPopup} />\n  );\n};\n\nexport default AddCategoryButton;\n","import React from \"react\";\n\nimport CategoriesDropDown from \"./CategoriesDropdown.js\";\nimport AddCategoryButton from \"./AddCategoryButton.js\";\nimport \"../../App.css\";\n\nconst GroceryCategories = ({ groceryCategories, handleChange, openPopup }) => {\n  return (\n    <div className=\"groceryCategories\">\n      <CategoriesDropDown\n        groceryCategories={groceryCategories}\n        handleChange={handleChange}\n      />\n      <AddCategoryButton openPopup={openPopup} />\n    </div>\n  );\n};\n\nexport default GroceryCategories;\n","import React from \"react\";\n\nimport \"../../App.css\";\n\nconst AddGroceryButton = ({ openPopup }) => {\n  return (\n    <button className=\"addGroceryButton\" onClick={openPopup}>\n      Add grocery\n    </button>\n  );\n};\n\nexport default AddGroceryButton;\n","import React from \"react\";\n\nimport \"../../App.css\";\n\nconst GroceryItem = ({ item, openPopup, closePopup, handleItemClick }) => {\n  const handleClick = (e) => {\n    e.preventDefault();\n    if (item.isBought) {\n      handleItemClick(item);\n      openPopup(\"boughtItem\");\n    } else {\n      handleItemClick(item);\n      openPopup(\"unboughtItem\");\n    }\n  };\n\n  return (\n    <div\n      className={\"groceryItem\" + (item.isBought ? \" greyed\" : \"\")}\n      onClick={handleClick}\n    >\n      <span>{item.name + \" (\" + item.quantity + \")\"}</span>\n    </div>\n  );\n};\n\nexport default GroceryItem;\n","import React, { useState } from \"react\";\n\nimport GroceryItem from \"./GroceryItem.js\";\nimport \"../../App.css\";\n\nconst CollapsibleList = ({\n  label,\n  filteredGroceries,\n  collapsedProp,\n  openPopup,\n  handleItemClick,\n}) => {\n  const [collapsed, setCollapsed] = useState(collapsedProp);\n\n  const handleClick = () => {\n    setCollapsed(!collapsed);\n  };\n\n  return (\n    <div className=\"collapsibleList\">\n      <div className=\"collapsibleLabel\" onClick={handleClick}>\n        {(collapsed ? \"▶ \" : \"▼ \") + label}\n      </div>\n      {!collapsed && (\n        <div className=\"itemList\">\n          {filteredGroceries.map((item) => (\n            <GroceryItem\n              key={item.name}\n              item={item}\n              openPopup={openPopup}\n              handleItemClick={handleItemClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CollapsibleList;\n","import React from \"react\";\n\nimport CollapsibleList from \"./CollapsibleList.js\";\nimport \"../../App.css\";\n\nconst GroceryList = ({\n  filteredGroceries,\n  openPopup,\n  closePopup,\n  handleItemClick,\n}) => {\n  return (\n    <div className=\"groceryList\">\n      <CollapsibleList\n        label={\"Not bought yet\"}\n        collapsedProp={false}\n        filteredGroceries={filteredGroceries.filter(\n          (item) => item.isBought === false\n        )}\n        openPopup={openPopup}\n        handleItemClick={handleItemClick}\n      />\n      <CollapsibleList\n        label={\"Bought items\"}\n        collapsedProp={true}\n        filteredGroceries={filteredGroceries.filter(\n          (item) => item.isBought === true\n        )}\n        openPopup={openPopup}\n        handleItemClick={handleItemClick}\n      />\n    </div>\n  );\n};\n\nexport default GroceryList;\n","const dateToString = (date) => {\n  return date.toLocaleDateString(\"en-GB\", { day: \"numeric\", month: \"long\" });\n};\n\nconst currentDate = () => {\n  let date = new Date().setHours(0, 0, 0, 0);\n  return new Date(date);\n};\n\nexport { dateToString, currentDate };\n","import React, { useState } from \"react\";\n\nimport PopupBase from \"../PopupBase.js\";\nimport { currentDate } from \"../../utils.js\";\nimport \"../../App.css\";\n\nconst AddGroceryPopup = ({\n  groceryCategories,\n  closePopup,\n  addGrocery,\n  groceriesDict,\n  currentUser,\n}) => {\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const quantity = e.target.quantity.value;\n    const category = e.target.category.value;\n    const groceryNames = groceriesDict.map((item) => item.name.toLowerCase());\n    if (groceryNames.indexOf(name.toLowerCase()) > -1) {\n      setErrMsg(\"item already in list\");\n    } else {\n      addGrocery({\n        name: name,\n        quantity: quantity ? quantity : null,\n        category: category !== \"Category\" ? category : null,\n        addedBy: currentUser,\n        addedOn: currentDate(),\n        isBought: false,\n      });\n      closePopup();\n    }\n  };\n\n  return (\n    <PopupBase\n      title=\"Add grocery to list\"\n      closePopup={closePopup}\n      anim=\"liftAnim\"\n    >\n      <form className=\"popupForm\" onSubmit={handleSubmit}>\n        <div className=\"formItem\">\n          <input name=\"name\" type=\"text\" placeholder=\"Name\" required />\n        </div>\n        <div className=\"formItem\">\n          <input name=\"quantity\" type=\"text\" placeholder=\"Quantity\" />\n        </div>\n        <div className=\"formItem\">\n          <select name=\"category\">\n            {[\"Category\", ...groceryCategories].map((item) => (\n              <option key={item} value={item}>\n                {item}\n              </option>\n            ))}\n          </select>\n        </div>\n        {errMsg && <p>{errMsg}</p>}\n        <div className=\"popupButton\">\n          <button className=\"green fullButton\" type=\"submit\">\n            Add grocery\n          </button>\n        </div>\n      </form>\n    </PopupBase>\n  );\n};\n\nexport default AddGroceryPopup;\n","import React, { useState } from \"react\";\n\nimport PopupBase from \"../PopupBase.js\";\nimport \"../../App.css\";\n\nconst AddCategoryPopup = ({ groceryCategories, addCategory, closePopup }) => {\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    if (\n      groceryCategories\n        .map((g) => g.toLowerCase())\n        .indexOf(name.toLowerCase()) > -1\n    ) {\n      setErrMsg(\"category exists\");\n    } else {\n      addCategory(name);\n      closePopup();\n    }\n  };\n\n  return (\n    <PopupBase title=\"\" closePopup={closePopup} anim=\"dropAnim\">\n      <form className=\"popupForm\" onSubmit={handleSubmit}>\n        <div>\n          <input name=\"name\" type=\"text\" placeholder=\"Category name\" required />\n        </div>\n        {errMsg && <p>{errMsg}</p>}\n        <div className=\"popupButton\">\n          <button className=\"green fullButton\" type=\"submit\">\n            Add category\n          </button>\n        </div>\n      </form>\n    </PopupBase>\n  );\n};\n\nexport default AddCategoryPopup;\n","import React from \"react\";\n\nimport PopupBase from \"../PopupBase.js\";\nimport ConfirmButton from \"./ConfirmButton.js\";\nimport { dateToString } from \"../../utils.js\";\nimport \"../../App.css\";\n\nconst BoughtGroceryPopup = ({ grocery, unbuyGrocery, closePopup }) => {\n  const handleUnbuy = () => {\n    unbuyGrocery(grocery);\n    closePopup();\n  };\n\n  return (\n    <PopupBase title={grocery.name} closePopup={closePopup} anim=\"scaleAnim\">\n      <span className=\"popupInfo\">\n        {\"Bought by \" +\n          grocery.boughtBy +\n          \" on \" +\n          dateToString(grocery.boughtOn) +\n          \" for \" +\n          grocery.price +\n          \"€.\"}\n      </span>\n      <div className=\"popupButton\">\n        <ConfirmButton\n          label=\"Unbuy\"\n          buttonClass=\"red fullButton\"\n          handleConfirm={handleUnbuy}\n        />\n      </div>\n    </PopupBase>\n  );\n};\n\nexport default BoughtGroceryPopup;\n","import React from \"react\";\n\nimport PopupBase from \"../PopupBase.js\";\nimport ConfirmButton from \"./ConfirmButton.js\";\nimport { dateToString } from \"../../utils.js\";\nimport \"../../App.css\";\n\nconst UnboughtGroceryPopup = ({\n  grocery,\n  buyGrocery,\n  removeGrocery,\n  closePopup,\n  currentUser,\n}) => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const price = parseInt(e.target.price.value);\n    buyGrocery(grocery, price, currentUser);\n    closePopup();\n  };\n\n  const handleRemove = () => {\n    removeGrocery(grocery);\n    closePopup();\n  };\n\n  return (\n    <PopupBase\n      title={\n        grocery.name + (grocery.quantity ? \" (\" + grocery.quantity + \")\" : \"\")\n      }\n      closePopup={closePopup}\n      anim=\"scaleAnim\"\n    >\n      <span className=\"popupInfo\">\n        {\"Added by \" +\n          grocery.addedBy +\n          \" on \" +\n          dateToString(grocery.addedOn) +\n          \".\"}\n      </span>\n      <form className=\"popupForm\" onSubmit={handleSubmit}>\n        <div className=\"formItem\">\n          <input\n            name=\"price\"\n            type=\"number\"\n            step=\"0.01\"\n            placeholder=\"Price (in €)\"\n            required\n          />\n        </div>\n        <div className=\"popupButtons\">\n          <ConfirmButton\n            label=\"Remove\"\n            buttonClass=\"halfButton red\"\n            handleConfirm={handleRemove}\n          />\n          <div className=\"verticalBorder\" />\n          <button className=\"halfButton green\" type=\"submit\">\n            Buy\n          </button>\n        </div>\n      </form>\n    </PopupBase>\n  );\n};\n\nexport default UnboughtGroceryPopup;\n","import React, { useState } from \"react\";\n\nimport AddGroceryPopup from \"./listViewComponents/AddGroceryPopup.js\";\nimport AddCategoryPopup from \"./listViewComponents/AddCategoryPopup.js\";\nimport BoughtGroceryPopup from \"./listViewComponents/BoughtGroceryPopup.js\";\nimport UnboughtGroceryPopup from \"./listViewComponents/UnboughtGroceryPopup.js\";\nimport LoginPopup from \"./LoginPopup.js\";\n\nimport \"../App.css\";\n\nconst PopupLogic = ({\n  popupType,\n  groceryCategories,\n  closePopup,\n  addGrocery,\n  unbuyGrocery,\n  buyGrocery,\n  removeGrocery,\n  addCategory,\n  groceriesDict,\n  clickedItem,\n  currentUser,\n  handleUserChange,\n}) => {\n  const [loggedIn, setLoggedIn] = useState(!!currentUser);\n\n  if (!popupType) {\n    return null;\n  } else {\n    if (loggedIn) {\n      switch (popupType) {\n        case \"newGrocery\":\n          return (\n            <AddGroceryPopup\n              groceryCategories={groceryCategories}\n              closePopup={closePopup}\n              addGrocery={addGrocery}\n              groceriesDict={groceriesDict}\n              currentUser={currentUser}\n            />\n          );\n        case \"newCategory\":\n          return (\n            <AddCategoryPopup\n              closePopup={closePopup}\n              addCategory={addCategory}\n              groceriesDict={groceriesDict}\n              groceryCategories={groceryCategories}\n            />\n          );\n        case \"boughtItem\":\n          return (\n            <BoughtGroceryPopup\n              grocery={clickedItem}\n              unbuyGrocery={unbuyGrocery}\n              closePopup={closePopup}\n            />\n          );\n        case \"unboughtItem\":\n          return (\n            <UnboughtGroceryPopup\n              grocery={clickedItem}\n              buyGrocery={buyGrocery}\n              removeGrocery={removeGrocery}\n              closePopup={closePopup}\n              currentUser={currentUser}\n            />\n          );\n        default:\n          return null;\n      }\n    } else {\n      return (\n        <LoginPopup\n          currentUser={currentUser}\n          handleUserChange={handleUserChange}\n          closeLogin={() => setLoggedIn(true)}\n          cancelLogin={closePopup}\n        />\n      );\n    }\n  }\n};\n\nexport default PopupLogic;\n","import React, { useState, useEffect } from \"react\";\n\nimport GroceryCategories from \"./listViewComponents/GroceryCategories.js\";\nimport AddGroceryButton from \"./listViewComponents/AddGroceryButton.js\";\nimport GroceryList from \"./listViewComponents/GroceryList.js\";\nimport PopupLogic from \"./PopupLogic.js\";\nimport \"../App.css\";\n\nconst ListView = ({\n  groceryCategoriesDb,\n  groceriesDb,\n  addGrocery,\n  buyGrocery,\n  unbuyGrocery,\n  removeGrocery,\n  addCategory,\n  currentUser,\n  handleUserChange,\n}) => {\n  const [currentCategory, setCurrentCategory] = useState(\"Select category\");\n  const [groceryCategories, setGroceryCategories] = useState(null);\n  const [groceriesDict, setGroceriesDict] = useState(null);\n  const [popupType, setPopupType] = useState(null);\n  const [clickedItem, setClickedItem] = useState(null);\n\n  useEffect(() => {\n    // simulate fetching data from db\n    setGroceriesDict(groceriesDb);\n    setGroceryCategories(groceryCategoriesDb);\n  }, [groceriesDb, groceryCategoriesDb]);\n\n  const handleCategoryChange = (e) => {\n    setCurrentCategory(e.target.value);\n  };\n\n  const handleItemClick = (item) => {\n    setClickedItem(item);\n  };\n\n  const openPopup = (popupType) => {\n    setPopupType(popupType);\n  };\n\n  const closePopup = () => {\n    setClickedItem(null);\n    setPopupType(null);\n  };\n\n  return groceriesDict && groceryCategories ? (\n    <div>\n      <PopupLogic\n        popupType={popupType}\n        groceryCategories={groceryCategories}\n        closePopup={closePopup}\n        addGrocery={addGrocery}\n        buyGrocery={buyGrocery}\n        unbuyGrocery={unbuyGrocery}\n        removeGrocery={removeGrocery}\n        addCategory={addCategory}\n        groceriesDict={groceriesDict}\n        clickedItem={clickedItem}\n        currentUser={currentUser}\n        handleUserChange={handleUserChange}\n      />\n      <div className={\"view\" + (popupType ? \" blur\" : \"\")}>\n        <div className=\"viewContent\">\n          <div className=\"viewTitle\">Grocery list</div>\n          <GroceryCategories\n            groceryCategories={groceryCategories}\n            handleChange={handleCategoryChange}\n            openPopup={() => openPopup(\"newCategory\")}\n          />\n          <AddGroceryButton openPopup={() => openPopup(\"newGrocery\")} />\n          <GroceryList\n            filteredGroceries={groceriesDict.filter(\n              (item) =>\n                currentCategory === \"Select category\" ||\n                item.category === currentCategory\n            )}\n            openPopup={openPopup}\n            handleItemClick={handleItemClick}\n            closePopup={closePopup}\n          />\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"view\">\n      <div className=\"viewContent\">\n        <div className=\"viewTitle\">Grocery list</div>\n        Loading grocery list...\n      </div>\n    </div>\n  );\n};\n\nexport default ListView;\n","import React, { useState, useEffect } from \"react\";\nimport { Chart } from \"react-charts\";\n\nimport \"../../App.css\";\n\nconst groceriesDbToDaysData = (groceries) => {\n  const boughtGroceries = groceries\n    .filter((g) => g.isBought)\n    .sort((a, b) => (a.boughtOn > b.boughtOn ? 1 : -1));\n\n  let sortedGroupedDates = (boughtGroceries) => {\n    let returns = [];\n    boughtGroceries.forEach((grocery) => {\n      const alreadyIndex = returns\n        .map((item) => (item ? item[0].toISOString() : null))\n        .indexOf(grocery.boughtOn.toISOString());\n      if (alreadyIndex > -1) {\n        let newVal = [\n          returns[alreadyIndex][0],\n          returns[alreadyIndex][1] + grocery.price,\n        ];\n        returns[alreadyIndex] = newVal;\n      } else {\n        returns.push([grocery.boughtOn, grocery.price]);\n      }\n    });\n    return returns;\n  };\n\n  const datesAndCumul = (datesAndPrices) => {\n    const cumulVal = (groceryList, index) => {\n      let returns = 0;\n      for (let i = 0; i <= index; i++) {\n        returns += groceryList[i][1];\n      }\n      return returns;\n    };\n\n    return datesAndPrices.map((arr, i) => [\n      arr[0],\n      cumulVal(datesAndPrices, i),\n    ]);\n  };\n\n  const arrayToXandY = (array) => {\n    let returns = [];\n    array.forEach((item) => {\n      returns.push({ x: item[0], y: item[1] });\n    });\n\n    return returns;\n  };\n\n  return arrayToXandY(datesAndCumul(sortedGroupedDates(boughtGroceries)));\n};\n\nconst MoneySpentChart = ({ groceriesDb }) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    setData([{ label: \"spent\", data: groceriesDbToDaysData(groceriesDb) }]);\n  }, [groceriesDb]);\n\n  const axes = [\n    { primary: true, type: \"time\", position: \"bottom\" },\n    { type: \"linear\", position: \"left\" },\n  ];\n\n  const series = {\n    showPoints: false,\n  };\n\n  return (\n    <div className=\"chartArea\">\n      <div className=\"chartTitle\">Total money spent</div>\n      <div className=\"chartBox\">\n        {data && <Chart data={data} axes={axes} series={series} tooltip />}\n      </div>\n    </div>\n  );\n};\n\nexport default MoneySpentChart;\n","import React, { useState, useEffect } from \"react\";\n\nimport MoneySpentChart from \"./statsViewComponents/MoneySpentChart.js\";\nimport \"../App.css\";\n\nconst StatsView = ({ groceriesDb }) => {\n  const [groceriesDict, setGroceriesDict] = useState(null);\n\n  useEffect(() => {\n    //simulate fetching data from db\n    setGroceriesDict(groceriesDb);\n  }, [groceriesDb]);\n\n  return groceriesDict ? (\n    <div className=\"view\">\n      <div className=\"viewContent\">\n        <div className=\"viewTitle\">Stats</div>\n        <MoneySpentChart groceriesDb={groceriesDb} />\n      </div>\n    </div>\n  ) : (\n    <div className=\"view\">\n      <div className=\"viewContent\">\n        <div className=\"viewTitle\">Stats</div>\n        Loading stats...\n      </div>\n    </div>\n  );\n};\n\nexport default StatsView;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"../../App.css\";\n\nconst RecipeDisplay = ({ recipe }) => {\n  const history = useHistory();\n  const [clicked, setClicked] = useState(false);\n\n  const handleClick = () => {\n    setClicked(!clicked);\n  };\n\n  const handleLinkClick = () => {\n    const fetchRecipeUrl = async (id) => {\n      const res = await fetch(\n        `https://api.spoonacular.com/recipes/${id.toString()}/information?apiKey=657f32e62bda4107b995812b8b98dd29`\n      );\n      if (res.status !== 200) {\n        console.log(\"error \" + res.status.toString());\n      } else {\n        return (await res.json()).sourceUrl;\n      }\n    };\n    console.log(\"link click\")\n    history.push(fetchRecipeUrl(recipe.id));\n  };\n\n  return (\n    <div\n      className={\"recipeDisplay\" + (clicked ? \" clickedRecipe\" : \"\")}\n      onClick={handleClick}\n    >\n      <div\n        className={\"recipeImage\" + (clicked ? \" clickedRecipeImage\" : \"\")}\n        style={{ backgroundImage: `url(${recipe.image})` }}\n      />\n      <div>\n        <div className=\"recipeTitle\">{recipe.title}</div>\n        {clicked && (\n          <div className=\"recipeButton\">\n            <button onClick={handleLinkClick}>View recipe</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeDisplay;\n","import React, { useState, useEffect } from \"react\";\n\nimport CategoriesDropDown from \"./listViewComponents/CategoriesDropdown.js\";\nimport RecipeDisplay from \"./recipesViewComponents/RecipeDisplay.js\";\nimport \"../App.css\";\n\nconst RecipesView = ({ groceriesDb, groceryCategoriesDb }) => {\n  const [groceryCategories, setGroceryCategories] = useState(null);\n  const [groceriesDict, setGroceriesDict] = useState(null);\n  const [selectedIngredients, setSelectedIngredients] = useState(null);\n  const [recipes, setRecipes] = useState(null);\n\n  useEffect(() => {\n    setGroceriesDict(groceriesDb);\n    setGroceryCategories(groceryCategoriesDb);\n  }, [groceriesDb, groceryCategoriesDb]);\n\n  useEffect(() => {\n    if (groceriesDict) {\n      setSelectedIngredients(groceriesDict.map((g) => g.name));\n    }\n  }, [groceriesDict]);\n\n  useEffect(() => {\n    if (selectedIngredients) {\n      const fetchRecipes = async (ingredients) => {\n        const query = ingredients.join(\",+\").toLowerCase();\n        const res = await fetch(\n          \"https://api.spoonacular.com/recipes/findByIngredients?apiKey=657f32e62bda4107b995812b8b98dd29&ingredients=\" +\n            query\n        );\n        if (res.status !== 200) {\n          setRecipes([\n            { id: \"err\", image: \"\", title: \"Error loading recipes.\" },\n          ]);\n        } else {\n          setRecipes(await res.json());\n        }\n      };\n      fetchRecipes(selectedIngredients);\n    }\n  }, [selectedIngredients]);\n\n  const handleCategoryChange = (e) => {\n    const currentCategory = e.target.value;\n    setSelectedIngredients(\n      groceriesDict\n        .filter(\n          (g) =>\n            currentCategory === \"Select category\" ||\n            g.category === currentCategory\n        )\n        .map((g) => g.name)\n    );\n  };\n\n  return groceriesDict && groceryCategories && recipes ? (\n    <div className=\"view\">\n      <div className=\"viewContent\">\n        <div className=\"viewTitle\">Recipes</div>\n        <div className=\"recipeDropdown\">\n          <CategoriesDropDown\n            groceryCategories={groceryCategories}\n            handleChange={handleCategoryChange}\n          />\n        </div>\n        <div className=\"recipesIntro\">\n          From ingredients: {selectedIngredients.join(\", \").toLowerCase()}.\n        </div>\n        <div className=\"recipesList\">\n          {recipes.map((r) => (\n            <RecipeDisplay key={r.id.toString()} recipe={r} />\n          ))}\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"view\">\n      <div className=\"viewContent\">\n        <div className=\"viewTitle\">Recipes</div>\n        Loading recipes...\n      </div>\n    </div>\n  );\n};\n\nexport default RecipesView;\n","import React from \"react\";\n\nimport LoginPopup from \"./LoginPopup.js\";\nimport ListView from \"./ListView.js\";\nimport StatsView from \"./StatsView.js\";\nimport RecipesView from \"./RecipesView.js\";\n\nimport \"../App.css\";\n\nconst ViewsLogic = ({\n  currentTab,\n  loginPopupState,\n  currentUser,\n  handleUserChange,\n  closeLogin,\n  groceryCategoriesDb,\n  groceriesDb,\n  addGrocery,\n  buyGrocery,\n  unbuyGrocery,\n  removeGrocery,\n  addCategory,\n}) => {\n  if (loginPopupState) {\n    return (\n      <div className=\"view\">\n        <LoginPopup\n          currentUser={currentUser}\n          handleUserChange={handleUserChange}\n          closeLogin={closeLogin}\n        />\n      </div>\n    );\n  } else {\n    switch (currentTab) {\n      case \"list\":\n        return (\n          <ListView\n            groceryCategoriesDb={groceryCategoriesDb}\n            groceriesDb={groceriesDb}\n            addGrocery={addGrocery}\n            buyGrocery={buyGrocery}\n            unbuyGrocery={unbuyGrocery}\n            removeGrocery={removeGrocery}\n            addCategory={addCategory}\n            currentUser={currentUser}\n            handleUserChange={handleUserChange}\n          />\n        );\n      case \"stats\":\n        return (\n          <StatsView\n            groceriesDb={groceriesDb}\n            groceryCategoriesDb={groceryCategoriesDb}\n          />\n        );\n      case \"recipes\":\n        return (\n          <RecipesView\n            groceriesDb={groceriesDb}\n            groceryCategoriesDb={groceryCategoriesDb}\n          />\n        );\n      default:\n        return <div className=\"view\">{currentTab}</div>;\n    }\n  }\n};\n\nexport default ViewsLogic;\n","import React, { useState } from \"react\";\n\nimport groceryDb from \"./db/groceryDb.js\";\nimport categoriesDb from \"./db/categoriesDb.js\";\n\nimport Header from \"./components/Header.js\";\nimport Nav from \"./components/Nav.js\";\nimport ViewsLogic from \"./components/ViewsLogic.js\";\nimport { currentDate } from \"./utils.js\";\nimport \"./App.css\";\n\nconst App = () => {\n  const tabList = [\"list\", \"stats\", \"recipes\"];\n\n  // DB simulation\n  const [groceryCategoriesDb, setGroceryCategoriesDb] = useState(categoriesDb);\n  const [groceriesDb, setGroceriesDb] = useState(groceryDb);\n\n  const addGrocery = (grocery) => {\n    setGroceriesDb([...groceriesDb, grocery]);\n  };\n\n  const addCategory = (category) => {\n    setGroceryCategoriesDb([...groceryCategoriesDb, category]);\n  };\n\n  const buyGrocery = (grocery, price, user) => {\n    setGroceriesDb(\n      groceriesDb.map((item) => {\n        if (item === grocery) {\n          item.isBought = true;\n          item.price = price;\n          item.boughtBy = user;\n          item.boughtOn = currentDate();\n        }\n        return item;\n      })\n    );\n  };\n\n  const unbuyGrocery = (grocery) => {\n    setGroceriesDb(\n      groceriesDb.map((item) => {\n        if (item === grocery) {\n          item.isBought = false;\n        }\n        return item;\n      })\n    );\n  };\n\n  const removeGrocery = (grocery) => {\n    setGroceriesDb(groceriesDb.filter((item) => item !== grocery));\n  };\n\n  // End DB simulation\n\n  const [currentTab, setCurrentTab] = useState(\"list\");\n  const [loginPopupState, setLoginPopupState] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const handleTabClick = (tabName) => {\n    return () => setCurrentTab(tabName);\n  };\n\n  const handleLoginClick = () => {\n    setLoginPopupState(true);\n  };\n\n  const handleUserChange = (newUser) => {\n    setCurrentUser(newUser);\n  };\n\n  const closeLogin = () => {\n    setLoginPopupState(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <Header\n        handleLoginClick={handleLoginClick}\n        currentUser={currentUser}\n        loginPopupState={loginPopupState}\n      />\n      <ViewsLogic\n        currentTab={currentTab}\n        loginPopupState={loginPopupState}\n        currentUser={currentUser}\n        handleUserChange={handleUserChange}\n        closeLogin={closeLogin}\n        groceryCategoriesDb={groceryCategoriesDb}\n        groceriesDb={groceriesDb}\n        addGrocery={addGrocery}\n        buyGrocery={buyGrocery}\n        unbuyGrocery={unbuyGrocery}\n        removeGrocery={removeGrocery}\n        addCategory={addCategory}\n      />\n      <Nav\n        tabList={tabList}\n        currentTab={currentTab}\n        handleTabClick={handleTabClick}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}